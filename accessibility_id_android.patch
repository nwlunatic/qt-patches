diff --git a/qtbase/src/android/accessibility/jar/src/org/qtproject/qt5/android/accessibility/QtAccessibilityDelegate.java b/qtbase/src/android/accessibility/jar/src/org/qtproject/qt5/android/accessibility/QtAccessibilityDelegate.java
index cc2aba7..1abd05f 100644
--- a/qtbase/src/android/accessibility/jar/src/org/qtproject/qt5/android/accessibility/QtAccessibilityDelegate.java
+++ b/qtbase/src/android/accessibility/jar/src/org/qtproject/qt5/android/accessibility/QtAccessibilityDelegate.java
@@ -310,6 +310,9 @@ public class QtAccessibilityDelegate extends View.AccessibilityDelegate
 
         node.setClassName(m_view.getClass().getName() + DEFAULT_CLASS_NAME);
         node.setPackageName(m_view.getContext().getPackageName());
+	String id = QtNativeAccessibility.viewIdResourceForAccessibleObject(virtualViewId);
+	if (!TextUtils.isEmpty(id))
+            node.setViewIdResourceName(String.format("%s:id/%s", node.getPackageName(), id));
 
         if (!QtNativeAccessibility.populateNode(virtualViewId, node))
             return node;
diff --git a/qtbase/src/android/accessibility/jar/src/org/qtproject/qt5/android/accessibility/QtNativeAccessibility.java b/qtbase/src/android/accessibility/jar/src/org/qtproject/qt5/android/accessibility/QtNativeAccessibility.java
index f0bf4a0..cf31498 100644
--- a/qtbase/src/android/accessibility/jar/src/org/qtproject/qt5/android/accessibility/QtNativeAccessibility.java
+++ b/qtbase/src/android/accessibility/jar/src/org/qtproject/qt5/android/accessibility/QtNativeAccessibility.java
@@ -55,6 +55,7 @@ class QtNativeAccessibility
     static native boolean clickAction(int objectId);
     static native boolean scrollForward(int objectId);
     static native boolean scrollBackward(int objectId);
+    static native String viewIdResourceForAccessibleObject(int objectId);
 
     static native boolean populateNode(int objectId, AccessibilityNodeInfo node);
 }
diff --git a/qtbase/src/plugins/platforms/android/android.pro b/qtbase/src/plugins/platforms/android/android.pro
index 3c3a4b4..7571f82 100644
--- a/qtbase/src/plugins/platforms/android/android.pro
+++ b/qtbase/src/plugins/platforms/android/android.pro
@@ -15,7 +15,7 @@ load(qt_plugin)
     LIBS += -ljnigraphics -landroid
 }
 
-QT += core-private gui-private platformsupport-private
+QT += core-private qml-private gui-private platformsupport-private
 
 CONFIG += qpa/genericunixfontdatabase
 
diff --git a/qtbase/src/plugins/platforms/android/androidjniaccessibility.cpp b/qtbase/src/plugins/platforms/android/androidjniaccessibility.cpp
index 5c927da..8bef7a5 100644
--- a/qtbase/src/plugins/platforms/android/androidjniaccessibility.cpp
+++ b/qtbase/src/plugins/platforms/android/androidjniaccessibility.cpp
@@ -42,6 +42,7 @@
 #include "QtGui/qaccessible.h"
 #include <QtCore/qmath.h>
 #include <QtCore/private/qjnihelpers_p.h>
+#include <QtQml>
 
 #include "qdebug.h"
 
@@ -64,6 +65,7 @@ namespace QtAndroidAccessibility
     static jmethodID m_setScrollableMethodID = 0;
     static jmethodID m_setTextSelectionMethodID = 0;
     static jmethodID m_setVisibleToUserMethodID = 0;
+    static jmethodID m_setViewIdResourceNameMethodID = 0;
 
 
     static void setActive(JNIEnv */*env*/, jobject /*thiz*/, jboolean active)
@@ -213,6 +215,34 @@ if (!clazz) { \
         return descriptionForAccessibleObject_helper(env, iface);
     }
 
+    static jstring viewIdResourceForAccessibleObject_helper(JNIEnv *env, QAccessibleInterface *iface)
+    {
+        QString resourceId = "";
+        if (iface && iface->isValid()) {
+            QObject *object = iface->object();
+
+            resourceId = object->objectName();
+
+	    if (resourceId.isEmpty()) {
+	        QQmlEngine *engine = qmlEngine(object);
+	        if (engine) {
+                    QQmlContext *context = engine->contextForObject(object);
+		    if (context) {
+	                resourceId = context->nameForObject(object);
+		    }
+		}
+	    }
+        }
+        return env->NewString((jchar*) resourceId.constData(), (jsize) resourceId.size());
+    }
+
+
+    static jstring viewIdResourceForAccessibleObject(JNIEnv *env, jobject /*thiz*/, jint objectId)
+    {
+        QAccessibleInterface *iface = interfaceFromId(objectId);
+        return viewIdResourceForAccessibleObject_helper(env, iface);
+    }
+
     static bool populateNode(JNIEnv *env, jobject /*thiz*/, jint objectId, jobject node)
     {
         QAccessibleInterface *iface = interfaceFromId(objectId);
@@ -278,6 +308,7 @@ if (!clazz) { \
         {"clickAction", "(I)Z", (void*)clickAction},
         {"scrollForward", "(I)Z", (void*)scrollForward},
         {"scrollBackward", "(I)Z", (void*)scrollBackward},
+        {"viewIdResourceForAccessibleObject", "(I)Ljava/lang/String;", (jstring)viewIdResourceForAccessibleObject},
     };
 
 #define GET_AND_CHECK_STATIC_METHOD(VAR, CLASS, METHOD_NAME, METHOD_SIGNATURE) \
@@ -312,6 +343,7 @@ if (!clazz) { \
         GET_AND_CHECK_STATIC_METHOD(m_setFocusedMethodID, nodeInfoClass, "setFocused", "(Z)V");
         GET_AND_CHECK_STATIC_METHOD(m_setScrollableMethodID, nodeInfoClass, "setScrollable", "(Z)V");
         GET_AND_CHECK_STATIC_METHOD(m_setVisibleToUserMethodID, nodeInfoClass, "setVisibleToUser", "(Z)V");
+        GET_AND_CHECK_STATIC_METHOD(m_setViewIdResourceNameMethodID, nodeInfoClass, "setViewIdResourceName", "(Ljava/lang/String;)V");
 
         if (QtAndroidPrivate::androidSdkVersion() >= 18) {
             GET_AND_CHECK_STATIC_METHOD(m_setTextSelectionMethodID, nodeInfoClass, "setTextSelection", "(II)V");
